lexer >
	- bug a = c\na = b > # костыльно, но бл@дь я это решил нах
AST classes >
parser
 - if
	- ignore line ends >
	- не выводиться ничего >
	- else >
 - for >
 - while >

Анализ Семантики >

Общий класс Interpretator
	- баг с переменными которые все false >
	- убрать ковычки у стринг >
	- проверить корень >
	- исправить уравнения с int и float >

движения мышкой, нажатие на клавищи итд >
getState может использоваться в parseExpression >
комментарии >
TRUE => true в лексере >
возможность писать keyword большими буквами >
"" и ''>
getx, gety >

break, continue>
!! - символ которой остонавливает интерпритаториа, типа exit() в Python>

учитывать всё для type в IoController (чтобы были все клавищи клавиатуры)>
нормально сделать со скобками в конструкциях {} () >

чтение из файла > 
команды >
консоль как в питоне >

boost в cmake>
\n in consoler >

переменные не перезаписываються, а просто добавляються новые >

delete vars in constructions >
	- file:
		- i остаёться в семан-анализ. и интепретаторе (для for) [семантика, интерпретатор] >
		- мусор из переменных в интерпретаре после конструкций который не удаляеться [семантика, интерпретатор>] >
	- console: >
		- i остаёться в семан-анализ. и интепретаторе (для for) [семантика>, интерпретатор>] >
		- переменные в конструкции "...{a = 0} PRINT a" работает [семантика>, интерпретатор>] >

multiple strings and other operations>

for ... { i } должен писать i как в питоне>
возможность решать задачи сразу в консоли и отстувие ошибок при числах вне unar или binar нода: 2 + 2 должно работать >
	- в binarnode для уравнений >
		- делений 10 / 3 некоректное >
		- a = 3 # в консоле пишет : 0 >
		- 3 > 2 пишет 1 вместо true >
		- a + 2 ломает парсер >
	- в Literal на тот случай если просто задать одно значение >
	- поменять вся на cout вместо printNode >

без создавания пустой переменой для input в ручную : input a >
x = RFLOOR(SIN 3) MOVE x, ... в левый верхний угол >

новые переменные: RANDOM, TIME, MOUSEWHEEL, READFILE, WRITEFILE, DO <код которы выполнить>|  >
	- Copy Rename >
	- Do >

все переменные в начале строки READFILE, GETX/Y, ... >
	- переменные ничего не пишут и вызывают ошибку, кроме времён, они пишут и вызывают [Interpreter] >
	- mat функции ничего не пишут >

исправить random >
	- (50 + RANDOM) % 100 ошибка  >

string + int = string // 'w' + 3 == 'w3' >

kmsl -v // returns version >
переделать все маленькие true false в большие TRUE и FALSE >
проверка всех операторов >

Обработкак ошибокы
	- везде поменять
		- посмотрет где ставить showErrors
			- например 3 + вызывает 429 ошибок, хотя должна быть одна >

	- > IF ()        [SYNTAX_ERROR][1] Token on wrong postiton
	  . {        ==> {                                         # почему они над друг другом? >
	  . }			 }
					 ^~~~~~~			 
	- IF ( // нормально не показывает где ошибка >
	- IF () // не появляеться ошибка >


	-> IF (TRUE)              >
       . {
       . }
       . ELSE
       .
       2 error/-s was found...
       
       [SYNTAX_ERROR][6] Token on wrong postiton
    
	   ~^~~~~~~~~~~~~~~~~~~
		
	 - semantic> 
		- IF чёт не правильная позиция> >

	-interpreter проверить все report от binar >


===============================================================================

	-проверить все заного [intepreter] >
		- sin "J" не вызывает ошибку

> "Hello" / 3
FALSE2 error/-s was found...   # этот FALSE надо убрать: решил оставить >

- a = 10, a /= 3 # не возвращяет float + также и с другими операторами  >



- проверить
	- проверить все одиночные команды в парсере самом низу parseLine >
		- GETX пишет тоже самое что и GETY >
		- RANDOM блять всё ещё сука не рандомный >
		- STATE "w" не принтуеться >
	- проверить INPUT >
	- check filesystem commands like remove >
	- DO должен использовать setCode или добавить репорты >
	- проверить вложенные циклы >



> WHILE (TRUE)
. {
. a /= 2
. a + '\n'
. }
.                             # вылетает ошибка, хотя вроде не должна >
5.000000
FALSE

в switch case поставить break если забыл >
отпимизация код и DRY
	- везде "a += n --> a = a + n" отдельный метод сыкономит много места >
	- printNode >



проверить буквально всё в ручную
	- INPUT a | a + 3 => ошибка >
	- SIN 3 >
	- READFILE чот не работает >
	- READFILE возвращяет неправильную ошибку [semantic] [interpreter]
	  + в vist(variableNode) не дебаггер ведёт себя странно
	  PARSER:
	  Block(
		UnarOpNode(READFILE, Literal(a))
	  )
	  + не работает уравнения REAFILE ('.git' + 'ignore') 
	- SCROLL 200, 3 застваляет чернеть экран > 

	- запрещённые символы для файлов ломают программу >

docs (переместить файл можно с помошью rename)
проверка компилируетсья ли с cmake
добавить возможнасть скачать только exe

статическая компиляция!!!